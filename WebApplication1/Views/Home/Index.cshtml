@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-md-4">
        <h2>Testing stuff here</h2>        
        <p>Page Id: <textarea rows="1" cols="50" id="pageId">8245623462</textarea></p>
        @*<p><a class="btn btn-default" onclick="testStuff()">Test link &raquo;</a></p>*@
        <p><a class="btn btn-default" onclick="getVideos(0)" >Get Videos &raquo;</a></p>
        <p><a class="btn btn-default" onclick="nextVideos()">Next &raquo;</a></p>
        <p><a class="btn btn-default" onclick="previousVideos()">Previous &raquo;</a></p>
    </div>
</div>

<div id="videos">
</div>

<script>
    var accessToken;
    //var testVal;

    var next = null;
    var previous = null;

    window.fbAsyncInit = function () {
        FB.init(
            {
                appId: '1057880530965917',
                xfbml: true,
                version: 'v2.7'
            });

        FB.getLoginStatus(function (response) {            
            accessToken = response.access_token;
        });
    };
    
    function testStuff() {
        // 477239829070134
        // 8245623462 - nba
        console.log(document.getElementById('pageId').value);
    };    

    function getVideos(link) {
        
        if (document.getElementById('videoList') != null) {
            document.getElementById('videos').removeChild(document.getElementById('videoList'));
        }

        var apiCall = '';
        if (link == 0) {            
            apiCall = '/' + document.getElementById('pageId').value + '/videos?fields=id,title,description,embed_html,likes.limit(0).summary(total_count),comments.limit(0).summary(total_count)&limit=6'
            next = null;
            previous = null;
        } else if (link != null) {            
            apiCall = link;
        } else {
            return;
        }

        var facebookCall = new Promise(
            function (resolve, reject) {                                
                FB.api(apiCall, { access_token: accessToken }, function (response) {
                    resolve(response);
                })
            }
        );

        facebookCall.then(
            // Log the resolve value, add videos to list of divs, set next and previous link
            function (val) {
                //console.log(val);
                //console.log(val.paging.next);
                //testVal = val;
                var videoListDiv = document.createElement('div');
                videoListDiv.className = 'row';
                videoListDiv.id = 'videoList';
                val.data.forEach(function outputVideos(element, index, array) {
                    //console.log(element.embed_html);
                    var videoDiv = document.createElement('div');
                    videoDiv.className = 'col-sm-4';
                    // check to see if we have a title or description for the video
                    element.title != null ? videoDiv.innerHTML += '<p>' + element.title + '</p>' : element.description != null ? videoDiv.innerHTML += '<p>' + element.description + '</p>' : videoDiv.innerHTML += '<p>Untitled</p>'
                    //videoDiv.innerHTML += '<p>' + element.embed_html + '</p>';
                    // normalize height and width of the videos
                    var embedString = element.embed_html;
                    console.log(embedString.match(/src="(.*?)"/)[0]);
                    embedString.replace(/width="\d*"/, "width=\"300\"");
                    embedString.replace(/height="\d*"/, "height=\"200\"");
                    //videoDiv.innerHTML += element.embed_html;
                    console.log(embedString);
                    //videoDiv.innerHTML += embedString;
                    videoDiv.innerHTML += '<iframe ' + embedString.match(/src="(.*?)"/)[0] + ' width="300" height="200" frameborder="1"></iframe>';
                    videoDiv.innerHTML += '<p>Likes: ' + element.likes.summary.total_count + '</p>';
                    videoDiv.innerHTML += '<p>Comments: ' + element.comments.summary.total_count + '</p>';
                    videoListDiv.appendChild(videoDiv);
                });
                document.getElementById('videos').appendChild(videoListDiv);
                if (val.paging.next != null) { next = val.paging.next; } else { next = null; }
                if (val.paging.previous != null) { previous = val.paging.previous; } else { previous = null; }
            })
        .catch(
            // Log the rejection reason
            function (reason) {
                console.log('Handle rejected promise (' + reason + ') here.');
            });
    }

    function nextVideos() {
        getVideos(next);
    }
    function previousVideos() {
        getVideos(previous);
    }


    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>